
Use JSON PATH query to retrieve the osImages of all the nodes and store it in a file /opt/outputs/nodes_os_x43kj56.txt
kubectl get nodes -o jsonpath='{.items[*].status.nodeInfo.osImage}' > /opt/outputs/nodes_os_x43kj56.txt


Expose the hr-web-app as service hr-web-app-service application on port 30082 on the nodes on the cluster
Run the command kubectl expose deployment hr-web-app --type=NodePort --port=8080 --name=hr-web-app-service --dry-run -o yaml > hr-web-app-service.yaml to generate a service definition file. Then edit the nodeport in it and create a service.

A new application orange is deployed. There is something wrong with it. 
Check the command used by the initContainer

Deploy a messaging pod using the redis:alpine image with the labels set to tier=msg.    
Use the command kubectl run --generator=run-pod/v1 messaging --image=redis:alpine -l tier=msg


Create a service messaging-service to expose the messaging application within the cluster on port 6379.
Run the command kubectl expose pod messaging --port=6379 --name messaging-service

