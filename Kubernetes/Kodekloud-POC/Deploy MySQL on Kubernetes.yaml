# A new MySQL server needs to be deployed on Kubernetes cluster. The Nautilus DevOps team was working on to gather the requirements. Recently they were able to finalize the requirements and shared them with the team members to start working on it.

# 1.) Create a PersistentVolume mysql-pv, its capacity should be 250Mi, set other parameters as per your preference.

# 2.) Create a PersistentVolumeClaim to request this PersistentVolume storage. Name it as mysql-pv-claim and request a 250Mi of storage. Set other parameters as per your preference.

# 3.) Create a  deployment named mysql-deployment, use any mysql image as per your preference. Mount the PersistentVolume at mount path /var/lib/mysql.

# 4.) Create a NodePort type service named mysql and set nodePort to 30007.

# 5.) Create a secret named mysql-root-pass having a key pair value, where key is password and its value is YUIidhb667, create another secret named mysql-user-pass having some key pair values, where frist key is username and its value is kodekloud_joy, second key is password and value is GyQkFRVNr3, create one more secret named mysql-db-url, key name is database and value is kodekloud_db6

# 6.) Define some Environment variables within the container:
#   a) name: MYSQL_ROOT_PASSWORD, should pick value from secretKeyRef name: mysql-root-pass and key: password
#   b) name: MYSQL_DATABASE, should pick value from secretKeyRef name: mysql-db-url and key: database
#   c) name: MYSQL_USER, should pick value from secretKeyRef name: mysql-user-pass key key: username
#   d) name: MYSQL_PASSWORD, should pick value from secretKeyRef name: mysql-user-pass and key: password


kubectl create secret generic mysql-root-pass --from-literal=password=YUIidhb667
kubectl create secret generic mysql-user-pass --from-literal=username=kodekloud_joy --from-literal=password=B4zNgHA7Ya
kubectl create secret generic mysql-db-url --from-literal=database=kodekloud_db8

# ---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: mysql-root-pass
# type: Opaque
# data:
#   password: YUIidhb667

# ---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: mysql-user-pass
# type: Opaque
# data:
#   username: kodekloud_rin
#   password: LQfKeWWxWD

# ---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: mysql-db-url
# type: Opaque
# data:
#   database: kodekloud_db6

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv
  labels:
    db: mysql
spec:
  capacity: 
    storage: 250Mi
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/tmp"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  labels:
    db: mysql
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 250Mi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  labels:
    db: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      db: mysql
  template:
    metadata:
      labels:
        db: mysql
    spec:
      containers:
      - name: mysql-container
        image: mysql:5.7
        ports:
        - containerPort: 3306
        env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql-root-pass
                key: password
          - name: MYSQL_DATABASE
            valueFrom:
              secretKeyRef:
                name: mysql-db-url
                key: database
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: mysql-user-pass
                key: username
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql-user-pass
                key: password
        volumeMounts:
          - name: database
            mountPath: /var/lib/mysql
      volumes:
      - name: database
        persistentVolumeClaim: 
          claimName: mysql-pv-claim

---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  labels:
    db: mysql
spec:
  type: NodePort
  selector:
    db: mysql
  ports:
  - protocol: TCP
    port: 3306
    nodePort: 30007