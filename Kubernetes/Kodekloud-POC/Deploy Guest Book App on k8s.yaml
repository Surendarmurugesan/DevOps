#Deploy Guest Book App on Kubernetes
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-master
spec:
  selector:
    matchLabels:
      app: backend-master
  replicas: 1
  template:
    metadata:
      labels:
        app: backend-master
    spec:
     containers:
     - name: master-redis-xfusion
       image:  redis
       resources:
         requests:
           memory: "100Mi"
           cpu: "100m"
       ports:
       - containerPort: 6379

---
apiVersion: v1
kind: Service
metadata:
  name: redis-master
spec:
  selector:
    app: backend-master
  ports:
    - port: 6379
      protocol: TCP
      targetPort: 6379

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-slave
spec:
  selector:
    matchLabels:
      app: backend-slave
  replicas: 2
  template:
    metadata:
      labels:
        app: backend-slave
    spec:
     containers:
     - name: slave-redis-xfusion
       image: gcr.io/google_samples/gb-redisslave:v3 
       resources:
         requests:
           memory: "100Mi"
           cpu: "100m"
       env:
       - name: GET_HOSTS_FROM
         value: "dns"
       ports:
       - containerPort: 6379

---
apiVersion: v1
kind: Service
metadata:
  name: redis-slave
spec:
  selector:
    app: backend-slave
  ports:
    - port: 6379
      protocol: TCP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  selector:
    matchLabels:
      app: frontend-redis
  replicas: 3
  template:
    metadata:
      labels:
        app: frontend-redis
    spec:
     containers:
     - name: php-redis-xfusion
       image: gcr.io/google-samples/gb-frontend:v4
       resources:
         requests:
           memory: "100Mi"
           cpu: "100m"
       env:
       - name: GET_HOSTS_FROM
         value: "dns"
       ports:
       - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  selector:
    app: frontend-redis
  type: NodePort
  ports:
    - protocol: TCP
      port: 80
      nodePort: 30009